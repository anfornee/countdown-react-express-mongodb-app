{"ast":null,"code":"var _jsxFileName = \"/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/CountdownContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      amountOfEvents: 0,\n      countdownContainerGrid: \"countdownContainerGrid\",\n      deletedEvent: false,\n      newEvent: this.props.newEvent\n    };\n\n    this.newEvent = eventInfo => {\n      this.setState({\n        events: [...this.state.events, eventInfo]\n      });\n    };\n\n    this.deleted = eventId => {\n      axios.delete('http://localhost:3001/events/delete', {\n        params: {\n          eventId\n        }\n      }).then(async response => {\n        // const res = await fetch(`http://localhost:3001/events`);\n        // const events = await res.json();\n        const events = this.state.events.filter((value, index, arr) => {\n          return value._id !== eventId;\n        });\n        this.setState({\n          events,\n          amountOfEvents: events.length\n        }, () => {\n          if (this.state.amountOfEvents === 2) {\n            this.setState({\n              countdownContainerGrid: \"countdownContainerGrid2\"\n            });\n          } else if (this.state.amountOfEvents === 1) {\n            this.setState({\n              countdownContainerGrid: \"countdownContainerGrid1\"\n            });\n          }\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://localhost:3001/events\");\n    const posts = await res.json();\n    this.setState({\n      events: posts,\n      amountOfEvents: posts.length\n    }, () => {\n      if (this.state.amountOfEvents === 2) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid2\"\n        });\n      } else if (this.state.amountOfEvents === 1) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid1\"\n        });\n      }\n    });\n  }\n\n  render() {\n    let events = this.state.events;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Stuff be happening!\"), React.createElement(\"div\", {\n      className: this.state.countdownContainerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, events.map(event => React.createElement(Countdown, {\n      deleted: this.deleted,\n      key: event._id,\n      id: event._id,\n      title: event.title,\n      month: event.month,\n      day: event.day,\n      year: event.year,\n      image: event.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CountdownContainer;","map":{"version":3,"sources":["/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/CountdownContainer.js"],"names":["React","Component","axios","Countdown","CountdownContainer","state","events","amountOfEvents","countdownContainerGrid","deletedEvent","newEvent","props","eventInfo","setState","deleted","eventId","delete","params","then","response","filter","value","index","arr","_id","length","catch","err","console","log","componentDidMount","res","fetch","posts","json","render","map","event","title","month","day","year","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n    state = {\n        events: [],\n        amountOfEvents: 0,\n        countdownContainerGrid: \"countdownContainerGrid\",\n        deletedEvent: false,\n        newEvent: this.props.newEvent\n    }\n\n    async componentDidMount() {\n        const res = await fetch(`http://localhost:3001/events`);\n        const posts = await res.json();\n        this.setState({ events: posts, amountOfEvents: posts.length },\n            () => {\n                if (this.state.amountOfEvents === 2) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                } else if (this.state.amountOfEvents === 1) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                }\n            });\n    }\n\n    newEvent = eventInfo => {\n        this.setState({\n            events: [...this.state.events, eventInfo]\n        });\n    }\n\n    deleted = eventId => {\n        axios.delete('http://localhost:3001/events/delete', { params: { eventId } })\n            .then(async (response) => {\n                // const res = await fetch(`http://localhost:3001/events`);\n                // const events = await res.json();\n                const events = this.state.events.filter((value, index, arr) => {\n                    return value._id !== eventId;\n                })\n                this.setState({ events, amountOfEvents: events.length },\n                    () => {\n                        if (this.state.amountOfEvents === 2) {\n                            this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                        } else if (this.state.amountOfEvents === 1) {\n                            this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                        }\n                    });\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        let events = this.state.events;\n        return (\n            <div className=\"App\">\n                <h1>Stuff be happening!</h1>\n                <div className={this.state.countdownContainerGrid}>\n                    {events.map(event =>\n                        <Countdown\n                            deleted={this.deleted}\n                            key={event._id}\n                            id={event._id}\n                            title={event.title}\n                            month={event.month}\n                            day={event.day}\n                            year={event.year}\n                            image={event.background}\n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CountdownContainer;\n"]},"metadata":{},"sourceType":"module"}