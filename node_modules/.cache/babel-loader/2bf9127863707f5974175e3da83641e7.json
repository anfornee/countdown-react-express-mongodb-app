{"ast":null,"code":"var _jsxFileName = \"/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/UserPage.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddEventBtn from \"./AddEventBtn\";\nimport EventCreator from \"./EventCreator\";\nimport CountdownContainer from \"./CountdownContainer\";\nexport default class UserPage extends Component {\n  constructor(props) {\n    super(props);\n    this.style = {\n      display: \"initial\"\n    };\n\n    this.hideMe = () => {\n      this.style = {\n        display: \"none\"\n      };\n      this.setState({\n        isHidden: true\n      });\n    };\n\n    this.bringMeBack = () => {\n      this.style = {\n        display: \"initial\"\n      };\n      this.setState({\n        isHidden: false\n      });\n    };\n\n    this.addedEvent = eventInfo => {\n      this.setState({\n        eventInfo\n      });\n    };\n\n    this.state = {\n      isHidden: false,\n      newEvent: false,\n      deletedEvent: false,\n      eventInfo: {},\n      events: {},\n      amountOfEvents: 0,\n      countdownContainerGrid: 'countdownContainerGrid'\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://localhost:3001/events\");\n    const posts = await res.json();\n    this.setState({\n      events: posts,\n      amountOfEvents: posts.length\n    }, () => {\n      if (this.state.amountOfEvents === 2) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid2\"\n        });\n      } else if (this.state.amountOfEvents === 1) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid1\"\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.events.length < 1) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"loading...\");\n    } else {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: this.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(AddEventBtn, {\n        hideMe: this.hideMe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/add-an-event\",\n        render: () => React.createElement(EventCreator, {\n          getNewEvent: this.getNewEvent,\n          addedEvent: this.addedEvent,\n          bringMeBack: this.bringMeBack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(CountdownContainer, {\n        eventInfo: this.state.eventInfo,\n        newEvent: this.state.newEvent,\n        events: this.state.events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/UserPage.js"],"names":["React","Component","BrowserRouter","Router","Route","AddEventBtn","EventCreator","CountdownContainer","UserPage","constructor","props","style","display","hideMe","setState","isHidden","bringMeBack","addedEvent","eventInfo","state","newEvent","deletedEvent","events","amountOfEvents","countdownContainerGrid","componentDidMount","res","fetch","posts","json","length","render","getNewEvent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AddEventBtn from \"./AddEventBtn\";\nimport EventCreator from \"./EventCreator\";\nimport CountdownContainer from \"./CountdownContainer\";\n\nexport default class UserPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isHidden: false,\n            newEvent: false,\n            deletedEvent: false,\n            eventInfo: {},\n            events: {},\n            amountOfEvents: 0,\n            countdownContainerGrid: 'countdownContainerGrid'\n        };\n    }\n\n    async componentDidMount() {\n        const res = await fetch(`http://localhost:3001/events`);\n        const posts = await res.json();\n        this.setState({ events: posts, amountOfEvents: posts.length },\n            () => {\n                if (this.state.amountOfEvents === 2) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                } else if (this.state.amountOfEvents === 1) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                }\n            });\n    }\n\n    style = {\n        display: \"initial\"\n    };\n\n    hideMe = () => {\n        this.style = {\n            display: \"none\"\n        };\n        this.setState({ isHidden: true });\n    };\n\n    bringMeBack = () => {\n        this.style = {\n            display: \"initial\"\n        };\n        this.setState({ isHidden: false });\n    };\n\n    addedEvent = eventInfo => {\n        this.setState({ eventInfo });\n    };\n\n\n    render() {\n        if (this.state.events.length < 1) {\n            return <h1>loading...</h1>\n        }\n        else {\n            return (\n                <Router>\n                    <div style={this.style}>\n                        <AddEventBtn hideMe={this.hideMe} />\n                    </div>\n                    <Route\n                        exact\n                        path=\"/add-an-event\"\n                        render={() => (\n                            <EventCreator\n                                getNewEvent={this.getNewEvent}\n                                addedEvent={this.addedEvent}\n                                bringMeBack={this.bringMeBack}\n                            />\n                        )}\n                    />\n                    <CountdownContainer\n                        eventInfo={this.state.eventInfo}\n                        newEvent={this.state.newEvent}\n                        events={this.state.events}\n                    />\n                </Router>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}