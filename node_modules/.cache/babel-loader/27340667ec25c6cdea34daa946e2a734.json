{"ast":null,"code":"var _jsxFileName = \"/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/CountdownContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: this.props.events,\n      amountOfEvents: 0,\n      countdownContainerGrid: \"countdownContainerGrid\",\n      deletedEvent: false,\n      newEvent: this.props.newEvent\n    };\n\n    this.getNewComment = commentInfo => {\n      this.setState({\n        commentBtnText: 'Comment',\n        showCommentForm: !this.state.showCommentForm,\n        comments: [...this.state.comments.reverse(), commentInfo]\n      });\n    };\n\n    this.deleted = (eventId, index) => {\n      let events = this.state.events;\n      events.splice(index, 1);\n      axios.delete('http://localhost:3001/events/delete', {\n        params: {\n          eventId\n        }\n      }).then(async response => {\n        this.setState({\n          events\n        });\n      });\n    };\n  }\n\n  render() {\n    let events = this.props.events;\n    console.log('events props: ', this.props.events);\n    return React.createElement(\"div\", {\n      className: \"mainCountdownContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.events.length > 0 || events.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Stuff be happening!\"), React.createElement(\"div\", {\n      className: this.props.containerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, events.map((event, index) => React.createElement(Countdown, {\n      deleted: this.props.deleted,\n      key: event._id,\n      id: event._id,\n      title: event.title,\n      month: event.month,\n      day: event.day,\n      year: event.year,\n      image: event.background,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Nothing is happening :(\")));\n  }\n\n}\n\nexport default CountdownContainer;","map":{"version":3,"sources":["/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/CountdownContainer.js"],"names":["React","Component","axios","Countdown","CountdownContainer","state","events","props","amountOfEvents","countdownContainerGrid","deletedEvent","newEvent","getNewComment","commentInfo","setState","commentBtnText","showCommentForm","comments","reverse","deleted","eventId","index","splice","delete","params","then","response","render","console","log","length","containerGrid","map","event","_id","title","month","day","year","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,kBAAN,SAAiCH,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEzCI,KAFyC,GAEjC;AACNC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MADb;AAENE,MAAAA,cAAc,EAAE,CAFV;AAGNC,MAAAA,sBAAsB,EAAE,wBAHlB;AAINC,MAAAA,YAAY,EAAE,KAJR;AAKNC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AALf,KAFiC;;AAAA,SAUzCC,aAVyC,GAUzBC,WAAW,IAAI;AAC7B,WAAKC,QAAL,CAAc;AACZC,QAAAA,cAAc,EAAE,SADJ;AAEZC,QAAAA,eAAe,EAAE,CAAC,KAAKX,KAAL,CAAWW,eAFjB;AAGZC,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKZ,KAAL,CAAWY,QAAX,CAAoBC,OAApB,EAAJ,EAAmCL,WAAnC;AAHE,OAAd;AAKD,KAhBwC;;AAAA,SAkBzCM,OAlByC,GAkB/B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5B,UAAIf,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAA,MAAAA,MAAM,CAACgB,MAAP,CAAcD,KAAd,EAAqB,CAArB;AACAnB,MAAAA,KAAK,CAACqB,MAAN,CAAa,qCAAb,EAAoD;AAAEC,QAAAA,MAAM,EAAE;AAAEJ,UAAAA;AAAF;AAAV,OAApD,EACGK,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,aAAKZ,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd;AACD,OAHH;AAID,KAzBwC;AAAA;;AA2BzCqB,EAAAA,MAAM,GAAG;AACP,QAAIrB,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKtB,KAAL,CAAWD,MAAzC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKD,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,GAA2B,CAA3B,IAAgCxB,MAAM,CAACwB,MAAP,GAAgB,CAAhD,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,MAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWwB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,MAAM,CAAC0B,GAAP,CAAW,CAACC,KAAD,EAAQZ,KAAR,KACV,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWY,OADtB;AAEE,MAAA,GAAG,EAAEc,KAAK,CAACC,GAFb;AAGE,MAAA,EAAE,EAAED,KAAK,CAACC,GAHZ;AAIE,MAAA,KAAK,EAAED,KAAK,CAACE,KAJf;AAKE,MAAA,KAAK,EAAEF,KAAK,CAACG,KALf;AAME,MAAA,GAAG,EAAEH,KAAK,CAACI,GANb;AAOE,MAAA,IAAI,EAAEJ,KAAK,CAACK,IAPd;AAQE,MAAA,KAAK,EAAEL,KAAK,CAACM,UARf;AASE,MAAA,KAAK,EAAElB,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,CAFF,GAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAvBN,CADF;AA8BD;;AA5DwC;;AA+D3C,eAAejB,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n\n  state = {\n    events: this.props.events,\n    amountOfEvents: 0,\n    countdownContainerGrid: \"countdownContainerGrid\",\n    deletedEvent: false,\n    newEvent: this.props.newEvent\n  }\n\n  getNewComment = commentInfo => {\n    this.setState({\n      commentBtnText: 'Comment',\n      showCommentForm: !this.state.showCommentForm,\n      comments: [...this.state.comments.reverse(), commentInfo],\n    });\n  }\n\n  deleted = (eventId, index) => {\n    let events = this.state.events\n    events.splice(index, 1)\n    axios.delete('http://localhost:3001/events/delete', { params: { eventId } })\n      .then(async (response) => {\n        this.setState({ events })\n      })\n  }\n\n  render() {\n    let events = this.props.events;\n    console.log('events props: ', this.props.events)\n    return (\n      <div className=\"mainCountdownContainer\">\n        {\n          this.state.events.length > 0 || events.length > 0\n            ?\n            <div>\n              <h1>Stuff be happening!</h1>\n              <div className={this.props.containerGrid}>\n                {events.map((event, index) =>\n                  <Countdown\n                    deleted={this.props.deleted}\n                    key={event._id}\n                    id={event._id}\n                    title={event.title}\n                    month={event.month}\n                    day={event.day}\n                    year={event.year}\n                    image={event.background}\n                    index={index}\n                  />\n                )}\n              </div>\n            </div>\n            :\n            <div>\n              <h1>Nothing is happening :(</h1>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default CountdownContainer;\n"]},"metadata":{},"sourceType":"module"}