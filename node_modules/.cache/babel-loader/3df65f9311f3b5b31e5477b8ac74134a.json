{"ast":null,"code":"var _jsxFileName = \"/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/CountdownContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      amountOfEvents: 0,\n      countdownContainerGrid: \"countdownContainerGrid\",\n      deletedEvent: false,\n      newEvent: this.props.newEvent\n    };\n\n    this.fetchEvents = () => {\n      const encodedURI = window.encodeURI(this.props.uri);\n      return axios.get(encodedURI).then(res => {});\n    };\n\n    this.deleted = eventId => {\n      console.log('first test');\n      axios.delete('http://localhost:3001/events/deleted', {\n        params: {\n          eventId\n        }\n      }).then(async response => {\n        console.log(response);\n        const res = await fetch(\"http://localhost:3001/events\");\n        const posts = await res.json();\n        console.log('second test');\n        this.setState({\n          events: posts,\n          amountOfEvents: posts.length\n        }, () => {\n          if (this.state.amountOfEvents === 2) {\n            this.setState({\n              countdownContainerGrid: \"countdownContainerGrid2\"\n            });\n          } else if (this.state.amountOfEvents === 1) {\n            this.setState({\n              countdownContainerGrid: \"countdownContainerGrid1\"\n            });\n          }\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://localhost:3001/events\");\n    const posts = await res.json();\n    this.setState({\n      events: posts,\n      amountOfEvents: posts.length\n    }, () => {\n      if (this.state.amountOfEvents === 2) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid2\"\n        });\n      } else if (this.state.amountOfEvents === 1) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid1\"\n        });\n      }\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) {\n      this.setState(nextProps);\n    }\n  }\n\n  render() {\n    console.log(this.props.newEvent);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Stuff be happening!\"), React.createElement(\"div\", {\n      className: this.state.countdownContainerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.events.map(event => React.createElement(Countdown, {\n      deleted: this.deleted,\n      key: event._id,\n      id: event._id,\n      title: event.title,\n      month: event.month,\n      day: event.day,\n      year: event.year,\n      image: event.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CountdownContainer;","map":{"version":3,"sources":["/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/CountdownContainer.js"],"names":["React","Component","axios","Countdown","CountdownContainer","state","events","amountOfEvents","countdownContainerGrid","deletedEvent","newEvent","props","fetchEvents","encodedURI","window","encodeURI","uri","get","then","res","deleted","eventId","console","log","delete","params","response","fetch","posts","json","setState","length","catch","err","componentDidMount","componentWillReceiveProps","nextProps","render","map","event","_id","title","month","day","year","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n    state = {\n        events: [],\n        amountOfEvents: 0,\n        countdownContainerGrid: \"countdownContainerGrid\",\n        deletedEvent: false,\n        newEvent: this.props.newEvent\n    }\n\n    fetchEvents = () => {\n        const encodedURI = window.encodeURI(this.props.uri);\n        return axios.get(encodedURI).then(res => {\n\n        });\n    }\n\n    async componentDidMount() {\n        const res = await fetch(`http://localhost:3001/events`);\n        const posts = await res.json();\n        this.setState({ events: posts, amountOfEvents: posts.length },\n            () => {\n                if (this.state.amountOfEvents === 2) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                } else if (this.state.amountOfEvents === 1) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                }\n            });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props !== nextProps) {\n            this.setState(nextProps);\n        }\n    }\n\n    deleted = eventId => {\n        console.log('first test')\n        axios.delete('http://localhost:3001/events/deleted', { params: { eventId }})\n            .then(async (response) => {\n                console.log(response)\n                const res = await fetch(`http://localhost:3001/events`);\n                const posts = await res.json();\n                console.log('second test')\n                this.setState({ events: posts, amountOfEvents: posts.length },\n                    () => {\n                        if (this.state.amountOfEvents === 2) {\n                            this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                        } else if (this.state.amountOfEvents === 1) {\n                            this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                        }\n                    });\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        console.log(this.props.newEvent);\n        return (\n            <div className=\"App\">\n                <h1>Stuff be happening!</h1>\n                <div className={this.state.countdownContainerGrid}>\n                    {this.state.events.map(event =>\n                        <Countdown\n                            deleted={this.deleted}\n                            key={event._id}\n                            id={event._id}\n                            title={event.title}\n                            month={event.month}\n                            day={event.day}\n                            year={event.year}\n                            image={event.background}\n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CountdownContainer;\n"]},"metadata":{},"sourceType":"module"}