{"ast":null,"code":"var _jsxFileName = \"/Users/anthonypereira/Documents/Coding/react-countdown-app/countdown/src/components/CountdownContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Countdown from './Countdown';\nimport events from '../countdown-list';\n\nclass CountdownContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      amountOfEvents: 0,\n      countdownContainerGrid: \"countdownContainerGrid\",\n      eventAdded: false\n    };\n\n    this.fetchEvents = () => {\n      this.setState({\n        events: []\n      }); //  FOR MYSQL DATABASE\n      // const encodedURI = window.encodeURI(this.props.uri);\n      // return axios.get(encodedURI).then(res => {\n      //     this.setState(() => {\n      //         return {\n      //             events: res.data,\n      //             amountOfEvents: res.data.length\n      //         }\n      //     }, () => {\n      //         if (this.state.amountOfEvents === 2) {\n      //             this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n      //         } else if (this.state.amountOfEvents === 1) {\n      //             this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n      //         }\n      //     });\n      // });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newEvent !== this.props.newEvent) {\n      this.fetchEvents();\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n    this.props.dispatch({\n      type: 'NO'\n    });\n    this.setState({\n      eventAdded: false\n    });\n  } // checkForUpdates = () => {\n  //     setInterval(() => {\n  //         if (this.props.newEvent) {\n  //             this.props.dispatch({\n  //                 type: 'NO'\n  //             });\n  //             this.setState({ eventAdded: true }, () => {\n  //                 this.fetchEvents();\n  //             })\n  //         }\n  //     }, 1000);\n  // }\n\n\n  render() {\n    // this.checkForUpdates();\n    console.log(events);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Stuff be happening!\"), React.createElement(\"div\", {\n      className: this.state.countdownContainerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.events.map(event => React.createElement(Countdown, {\n      key: event.Id,\n      title: event.Title,\n      month: event.Month,\n      day: event.Day,\n      year: event.Year,\n      image: event.Background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    newEvent: state.newEvent\n  };\n}\n\nexport default connect(mapStateToProps)(CountdownContainer);","map":{"version":3,"sources":["/Users/anthonypereira/Documents/Coding/react-countdown-app/countdown/src/components/CountdownContainer.js"],"names":["React","Component","axios","connect","Countdown","events","CountdownContainer","state","amountOfEvents","countdownContainerGrid","eventAdded","fetchEvents","setState","componentWillReceiveProps","nextProps","newEvent","props","componentDidMount","dispatch","type","render","console","log","map","event","Id","Title","Month","Day","Year","Background","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCM,KADuC,GAC/B;AACJF,MAAAA,MAAM,EAAE,EADJ;AAEJG,MAAAA,cAAc,EAAE,CAFZ;AAGJC,MAAAA,sBAAsB,EAAE,wBAHpB;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAD+B;;AAAA,SAQvCC,WARuC,GAQzB,MAAM;AAChB,WAAKC,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAE;AADE,OAAd,EADgB,CAIhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA7BsC;AAAA;;AA+BvCQ,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACC,QAAV,KAAuB,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AAC5C,WAAKJ,WAAL;AACH;AACJ;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,WAAL;AACA,SAAKK,KAAL,CAAWE,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE;AADU,KAApB;AAGA,SAAKP,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAE;AAAd,KAAd;AACH,GA3CsC,CA6CvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAU,EAAAA,MAAM,GAAG;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACA,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAK,MAAA,SAAS,EAAE,KAAKE,KAAL,CAAWE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWF,MAAX,CAAkBkB,GAAlB,CAAsBC,KAAK,IACxB,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,MAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAII,MAAA,GAAG,EAAEH,KAAK,CAACI,GAJf;AAKI,MAAA,IAAI,EAAEJ,KAAK,CAACK,IALhB;AAMI,MAAA,KAAK,EAAEL,KAAK,CAACM,UANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAFJ,CADJ;AAiBH;;AA9EsC;;AAiF3C,SAASC,eAAT,CAAyBxB,KAAzB,EAAgC;AAC5B,SAAO;AACHQ,IAAAA,QAAQ,EAAER,KAAK,CAACQ;AADb,GAAP;AAGH;;AAED,eAAeZ,OAAO,CAAC4B,eAAD,CAAP,CAAyBzB,kBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport Countdown from './Countdown';\n\nimport events from '../countdown-list'\n\nclass CountdownContainer extends Component {\n    state = {\n        events: [],\n        amountOfEvents: 0,\n        countdownContainerGrid: \"countdownContainerGrid\",\n        eventAdded: false\n    }\n\n    fetchEvents = () => {\n        this.setState({\n            events: []\n        })\n        //  FOR MYSQL DATABASE\n\n        // const encodedURI = window.encodeURI(this.props.uri);\n        // return axios.get(encodedURI).then(res => {\n        //     this.setState(() => {\n        //         return {\n        //             events: res.data,\n        //             amountOfEvents: res.data.length\n        //         }\n        //     }, () => {\n        //         if (this.state.amountOfEvents === 2) {\n        //             this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n        //         } else if (this.state.amountOfEvents === 1) {\n        //             this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n        //         }\n        //     });\n        // });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.newEvent !== this.props.newEvent) {\n            this.fetchEvents();\n        }\n    }\n\n    componentDidMount() {\n        this.fetchEvents();\n        this.props.dispatch({\n            type: 'NO'\n        });\n        this.setState({ eventAdded: false });\n    }\n\n    // checkForUpdates = () => {\n    //     setInterval(() => {\n    //         if (this.props.newEvent) {\n    //             this.props.dispatch({\n    //                 type: 'NO'\n    //             });\n    //             this.setState({ eventAdded: true }, () => {\n    //                 this.fetchEvents();\n    //             })\n    //         }\n    //     }, 1000);\n    // }\n\n    render() {\n        // this.checkForUpdates();\n        console.log(events)\n        return (\n            <div className=\"App\">\n                <h1>Stuff be happening!</h1>\n                <div className={this.state.countdownContainerGrid}>\n                    {this.state.events.map(event =>\n                        <Countdown\n                            key={event.Id}\n                            title={event.Title}\n                            month={event.Month}\n                            day={event.Day}\n                            year={event.Year}\n                            image={event.Background}\n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        newEvent: state.newEvent\n    };\n}\n\nexport default connect(mapStateToProps)(CountdownContainer);\n"]},"metadata":{},"sourceType":"module"}