{"ast":null,"code":"var _jsxFileName = \"/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/UserPage.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport AddEventBtn from \"./AddEventBtn\";\nimport EventCreator from \"./EventCreator\";\nimport CountdownContainer from \"./CountdownContainer\";\nexport default class UserPage extends Component {\n  constructor(props) {\n    super(props);\n    this.style = {\n      display: \"initial\"\n    };\n\n    this.hideMe = () => {\n      this.style = {\n        display: \"none\"\n      };\n      this.setState({\n        isHidden: true\n      });\n    };\n\n    this.bringMeBack = () => {\n      this.style = {\n        display: \"initial\"\n      };\n    };\n\n    this.getNewEvent = eventInfo => {\n      this.style = {\n        display: \"initial\"\n      };\n      this.setState({\n        isHidden: false,\n        events: [...this.state.events.reverse(), eventInfo]\n      });\n    };\n\n    this.deleted = (eventId, index) => {\n      let events = this.state.events;\n      events.splice(index, 1);\n      axios.delete('http://localhost:3001/events/delete', {\n        params: {\n          eventId\n        }\n      }).then(async response => {\n        this.setState({\n          events\n        });\n      });\n    };\n\n    this.state = {\n      loading: true,\n      isHidden: false,\n      newEvent: false,\n      deletedEvent: false,\n      eventInfo: {},\n      events: {},\n      amountOfEvents: 0,\n      countdownContainerGrid: 'countdownContainerGrid'\n    };\n  }\n\n  async componentDidMount() {\n    const userId = localStorage.getItem('userId');\n    const res = await fetch(\"http://localhost:3001/events/\".concat(userId));\n    const events = await res.json();\n    const amountOfEvents = events.length;\n    this.setState({\n      events,\n      loading: !this.state.loading\n    }, () => {\n      if (amountOfEvents === 2) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid2\"\n        });\n      } else if (amountOfEvents === 1) {\n        this.setState({\n          countdownContainerGrid: \"countdownContainerGrid1\"\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"loading...\");\n    } else {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: this.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(AddEventBtn, {\n        hideMe: this.hideMe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/add-an-event\",\n        render: () => React.createElement(EventCreator, {\n          getNewEvent: this.getNewEvent,\n          bringMeBack: this.bringMeBack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(CountdownContainer, {\n        newEvent: this.state.newEvent,\n        events: this.state.events,\n        containerGrid: this.state.countdownContainerGrid,\n        deleted: this.deleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/UserPage.js"],"names":["React","Component","BrowserRouter","Router","Route","axios","AddEventBtn","EventCreator","CountdownContainer","UserPage","constructor","props","style","display","hideMe","setState","isHidden","bringMeBack","getNewEvent","eventInfo","events","state","reverse","deleted","eventId","index","splice","delete","params","then","response","loading","newEvent","deletedEvent","amountOfEvents","countdownContainerGrid","componentDidMount","userId","localStorage","getItem","res","fetch","json","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport AddEventBtn from \"./AddEventBtn\";\nimport EventCreator from \"./EventCreator\";\nimport CountdownContainer from \"./CountdownContainer\";\n\nexport default class UserPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loading: true,\n            isHidden: false,\n            newEvent: false,\n            deletedEvent: false,\n            eventInfo: {},\n            events: {},\n            amountOfEvents: 0,\n            countdownContainerGrid: 'countdownContainerGrid'\n        };\n    }\n\n    async componentDidMount() {\n        const userId = localStorage.getItem('userId')\n        const res = await fetch(`http://localhost:3001/events/${userId}`);\n        const events = await res.json();\n        const amountOfEvents = events.length\n        this.setState({ events, loading: !this.state.loading },\n            () => {\n                if (amountOfEvents === 2) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                } else if (amountOfEvents === 1) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                }\n            });\n    }\n\n    style = {\n        display: \"initial\"\n    };\n\n    hideMe = () => {\n        this.style = {\n            display: \"none\"\n        };\n        this.setState({ isHidden: true });\n    };\n\n    bringMeBack = () => {\n        this.style = {\n            display: \"initial\"\n        };\n    };\n\n    getNewEvent = eventInfo => {\n        this.style = {\n            display: \"initial\"\n        };\n        this.setState({ isHidden: false, events: [...this.state.events.reverse(), eventInfo]});\n    };\n\n    deleted = (eventId, index) => {\n        let events = this.state.events\n        events.splice(index, 1)\n        axios.delete('http://localhost:3001/events/delete', { params: { eventId } })\n            .then(async (response) => {\n                this.setState({ events })\n            })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <h1>loading...</h1>\n        }\n        else {\n            return (\n                <Router>\n                    <div style={this.style}>\n                        <AddEventBtn hideMe={this.hideMe} />\n                    </div>\n                    <Route\n                        exact\n                        path=\"/add-an-event\"\n                        render={() => (\n                            <EventCreator\n                                getNewEvent={this.getNewEvent}\n                                bringMeBack={this.bringMeBack}\n                            />\n                        )}\n                    />\n                    <CountdownContainer\n                        newEvent={this.state.newEvent}\n                        events={this.state.events}\n                        containerGrid={this.state.countdownContainerGrid}\n                        deleted={this.deleted}\n                    />\n                </Router>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}