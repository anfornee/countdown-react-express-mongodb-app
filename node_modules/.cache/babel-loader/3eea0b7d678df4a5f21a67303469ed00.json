{"ast":null,"code":"var _jsxFileName = \"/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/EventCreator.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport closeIcon from '../assets/images/close-cross-in-circular-outlined-interface-button-2.png';\n\nclass EventCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userId: '',\n      title: '',\n      year: 0,\n      month: 0,\n      day: 0,\n      background: \"\"\n    };\n\n    this.titleChange = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.dateChange = e => {\n      const dateArray = e.target.value.split('-');\n      const year = parseInt(dateArray[0]);\n      const month = parseInt(dateArray[1]);\n      const day = parseInt(dateArray[2]);\n      this.setState({\n        year: year,\n        month: month,\n        day: day\n      });\n    };\n\n    this.bgChange = e => {\n      this.setState({\n        background: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const event = {\n        userId: this.state.userId,\n        title: this.state.title,\n        year: this.state.year,\n        month: this.state.month,\n        day: this.state.day,\n        background: this.state.background\n      };\n      axios.post('http://localhost:3001/events/add-an-event', event).then(res => {\n        const eventInfo = res.data;\n        this.setState({\n          title: '',\n          year: 0,\n          month: 0,\n          day: 0,\n          background: ''\n        }, () => {\n          this.props.bringMeBack(eventInfo);\n          this.props.history.push('/home');\n        });\n      }).catch(e => console.log(e));\n    };\n  }\n\n  componentDidMount() {\n    const userId = localStorage.getItem('userId');\n    this.setState({\n      userId\n    });\n  }\n\n  render() {\n    console.log('userId state: ', this.state.userId);\n    return React.createElement(\"div\", {\n      className: \"evntAddFormCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"eventAdderForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        position: \"relative\",\n        alignSelf: \"flex-start\",\n        bottom: \"15px\"\n      },\n      onClick: this.props.bringMeBack,\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Event Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.title,\n      name: \"Title\",\n      onChange: this.titleChange,\n      placeholder: \"Vacation!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Day of Event:\"), React.createElement(\"input\", {\n      id: \"date\",\n      name: \"Date\",\n      onChange: this.dateChange,\n      type: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Background URL:\"), React.createElement(\"input\", {\n      id: \"background\",\n      name: \"Background\",\n      onChange: this.bgChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Add it!\"))));\n  }\n\n}\n\nexport default withRouter(EventCreator);","map":{"version":3,"sources":["/Users/ald59/Documents/personal-projects/countdown-react-express-mongodb-app/src/components/EventCreator.js"],"names":["React","Component","Link","withRouter","axios","closeIcon","EventCreator","state","userId","title","year","month","day","background","titleChange","e","setState","target","value","dateChange","dateArray","split","parseInt","bgChange","onSubmit","preventDefault","event","post","then","res","eventInfo","data","props","bringMeBack","history","push","catch","console","log","componentDidMount","localStorage","getItem","render","position","alignSelf","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport closeIcon from '../assets/images/close-cross-in-circular-outlined-interface-button-2.png';\n\nclass EventCreator extends Component {\n    state = {\n        userId: '',\n        title: '',\n        year: 0,\n        month: 0,\n        day: 0,\n        background: \"\"\n    }\n\n    componentDidMount() {\n        const userId = localStorage.getItem('userId')\n        this.setState({ userId })\n    }\n\n    titleChange = e => {\n        this.setState({ title: e.target.value });\n    }\n\n    dateChange = e => {\n        const dateArray = e.target.value.split('-');\n        const year = parseInt(dateArray[0]);\n        const month = parseInt(dateArray[1]);\n        const day = parseInt(dateArray[2]);\n        this.setState({\n            year: year,\n            month: month,\n            day: day\n        });\n    }\n\n    bgChange = e => {\n        this.setState({ background: e.target.value });\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const event = {\n            userId: this.state.userId,\n            title: this.state.title,\n            year: this.state.year,\n            month: this.state.month,\n            day: this.state.day,\n            background: this.state.background\n        };\n\n        axios.post('http://localhost:3001/events/add-an-event', event)\n            .then(res => {\n                const eventInfo = res.data;\n                this.setState({\n                    title: '',\n                    year: 0,\n                    month: 0,\n                    day: 0,\n                    background: ''\n                }, () => {\n                    this.props.bringMeBack(eventInfo);\n                    this.props.history.push('/home')\n                });\n            })\n            .catch(e => console.log(e))\n    }\n\n    render() {\n        console.log('userId state: ', this.state.userId)\n        return (\n            <div className=\"evntAddFormCont\">\n                <div className=\"eventAdderForm\">\n                    <Link\n                        style={{ position: \"relative\", alignSelf: \"flex-start\", bottom: \"15px\" }}\n                        onClick={this.props.bringMeBack} to=\"/home\" >\n                        <img src={closeIcon} alt=\"close\"></img>\n                    </Link>\n                    <form onSubmit={this.onSubmit}>\n                        <label htmlFor=\"title\">Event Name: </label>\n                        <input type=\"text\" value={this.state.title} name=\"Title\" onChange={this.titleChange} placeholder=\"Vacation!\" />\n                        <br></br>\n                        <label htmlFor=\"date\">Day of Event:</label>\n                        <input id=\"date\" name=\"Date\" onChange={this.dateChange} type=\"date\" />\n                        <br></br>\n                        <label htmlFor=\"background\">Background URL:</label>\n                        <input id=\"background\" name=\"Background\" onChange={this.bgChange} type=\"text\" />\n                        <br></br>\n                        <button type=\"submit\">Add it!</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EventCreator);"]},"metadata":{},"sourceType":"module"}