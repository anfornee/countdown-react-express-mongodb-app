{"ast":null,"code":"var _jsxFileName = \"/Users/anthonypereira/Documents/Coding/react-countdown-app/countdown/src/components/CountdownContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport EventCreator from './EventCreator';\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      amountOfEvents: 0,\n      countdownContainerGrid: \"countdownContainerGrid\",\n      eventAdded: false,\n      clicked: false\n    };\n\n    this.fetchEvents = () => {\n      const encodedURI = window.encodeURI(this.props.uri);\n      return axios.get(encodedURI).then(res => {\n        this.setState(() => {\n          return {\n            events: res.data,\n            amountOfEvents: res.data.length\n          };\n        }, () => {\n          if (this.state.amountOfEvents === 2) {\n            this.setState({\n              countdownContainerGrid: \"countdownContainerGrid2\"\n            });\n          } else if (this.state.amountOfEvents === 1) {\n            this.setState({\n              countdownContainerGrid: \"countdownContainerGrid1\"\n            });\n          }\n        });\n      });\n    };\n\n    this.checkForUpdates = () => {\n      setInterval(() => {\n        if (this.props.newEvent) {\n          this.props.dispatch({\n            type: 'NO'\n          });\n          this.setState({\n            eventAdded: true\n          }, () => {\n            this.fetchEvents();\n          });\n        }\n      }, 1000);\n    };\n\n    this.display = {\n      opacity: '1'\n    };\n\n    this.gotClicked = () => {\n      this.display = {\n        opacity: '0'\n      };\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.changed = () => {\n      if (this.props.clicked) {\n        this.props.dispatch({\n          type: 'DONE'\n        });\n        this.setState({\n          clicked: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n    this.props.dispatch({\n      type: 'NO'\n    });\n    this.setState({\n      eventAdded: false\n    });\n  }\n\n  render() {\n    this.checkForUpdates();\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/add-an-event\",\n      component: EventCreator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.display,\n      className: \"addEventBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        textDecoration: 'none',\n        color: 'black'\n      },\n      onClick: this.gotClicked,\n      to: \"/add-an-event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Add an event!\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Stuff be happening!\"), React.createElement(\"div\", {\n      className: this.state.countdownContainerGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.events.map(event => React.createElement(Countdown, {\n      key: event.Id,\n      title: event.Title,\n      month: event.Month,\n      day: event.Day,\n      year: event.Year,\n      image: event.Background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    newEvent: state.newEvent,\n    clicked: state.clicked\n  };\n}\n\nexport default connect(mapStateToProps)(CountdownContainer);","map":{"version":3,"sources":["/Users/anthonypereira/Documents/Coding/react-countdown-app/countdown/src/components/CountdownContainer.js"],"names":["React","Component","axios","BrowserRouter","Router","Link","Route","connect","EventCreator","Countdown","CountdownContainer","state","events","amountOfEvents","countdownContainerGrid","eventAdded","clicked","fetchEvents","encodedURI","window","encodeURI","props","uri","get","then","res","setState","data","length","checkForUpdates","setInterval","newEvent","dispatch","type","display","opacity","gotClicked","changed","componentDidMount","render","textDecoration","color","map","event","Id","Title","Month","Day","Year","Background","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport EventCreator from './EventCreator';\nimport Countdown from './Countdown';\n\nclass CountdownContainer extends Component {\n    state = {\n        events: [],\n        amountOfEvents: 0,\n        countdownContainerGrid: \"countdownContainerGrid\",\n        eventAdded: false,\n        clicked: false\n    }\n\n    fetchEvents = () => {\n        const encodedURI = window.encodeURI(this.props.uri);\n\n        return axios.get(encodedURI).then(res => {\n            this.setState(() => {\n                return {\n                    events: res.data,\n                    amountOfEvents: res.data.length\n                }\n            }, () => {\n                if (this.state.amountOfEvents === 2) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid2\" })\n                } else if (this.state.amountOfEvents === 1) {\n                    this.setState({ countdownContainerGrid: \"countdownContainerGrid1\" })\n                }\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.fetchEvents();\n        this.props.dispatch({\n            type: 'NO'\n        });\n        this.setState({ eventAdded: false });\n    }\n\n    checkForUpdates = () => {\n        setInterval(() => {\n            if (this.props.newEvent) {\n                this.props.dispatch({\n                    type: 'NO'\n                });\n                this.setState({ eventAdded: true }, () => {\n                    this.fetchEvents();\n                })\n            }\n        }, 1000);\n    }\n\n    display = {\n        opacity: '1'\n    }\n\n    gotClicked = () => {\n        this.display = {\n            opacity: '0'\n        }\n        this.setState({ clicked: true })\n    }\n\n    changed = () => {\n        if (this.props.clicked) {\n            this.props.dispatch({\n                type: 'DONE'\n            });\n            this.setState({ clicked: false })\n        }\n    }\n\n    render() {\n        this.checkForUpdates();\n        return (\n            <Router>\n                <Route exact path=\"/add-an-event\" component={EventCreator} />\n                <div className=\"App\">\n                    <div style={this.display} className=\"addEventBtn\">\n                        <Link style={{ textDecoration: 'none', color: 'black' }} onClick={this.gotClicked} to=\"/add-an-event\">Add an event!</Link>\n                    </div>\n                    <h1>Stuff be happening!</h1>\n                    <div className={this.state.countdownContainerGrid}>\n                        {this.state.events.map(event =>\n                            <Countdown\n                                key={event.Id}\n                                title={event.Title}\n                                month={event.Month}\n                                day={event.Day}\n                                year={event.Year}\n                                image={event.Background}\n                            />\n                        )}\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        newEvent: state.newEvent,\n        clicked: state.clicked\n    };\n}\n\nexport default connect(mapStateToProps)(CountdownContainer);\n"]},"metadata":{},"sourceType":"module"}